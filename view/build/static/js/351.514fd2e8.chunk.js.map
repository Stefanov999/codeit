{"version":3,"file":"static/js/351.514fd2e8.chunk.js","mappings":"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","sources":["webpack://codeit/./src/administration/UsersEdit/usersAdmin.module.scss?3daf","webpack://codeit/./src/administration/UsersEdit/UsersEditModal/usersEditModal.module.scss?6495","administration/UsersEdit/UsersEditModal/UsersEditModal.tsx","webpack://codeit/./src/administration/UsersEdit/PopUp/popUp.module.scss?5d4d","administration/UsersEdit/PopUp/PopUp.tsx","administration/UsersEdit/UsersEdit.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"EditUsersWrapper\":\"usersAdmin_EditUsersWrapper__UD2z4\",\"tableUsers\":\"usersAdmin_tableUsers__1sJA4\"};","// extracted by mini-css-extract-plugin\nexport default {\"role\":\"usersEditModal_role__1M1rK\",\"delete\":\"usersEditModal_delete__-M4BK\"};","import Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport styles from './usersEditModal.module.scss'\r\nimport { deleteTitlesData,updateTitlesData } from '../../FetchFunctions/fetchFunctionsAdmin/FetchFunctionsAdmin';\r\nimport { TaskContext } from '../../../components/Context/TaskContext';\r\nimport { useContext,useState } from \"react\"\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: theme => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\ninterface Props {\r\n open :boolean ;\r\n handleClose() :void ;\r\n role : any ;\r\n reload() : Promise<void>\r\n}\r\n\r\nconst UsersEditModal: React.FC<Props> = ({open,handleClose,role,reload}) => {\r\n  const { token } = useContext(TaskContext);\r\n  const [selectValue,setSelectValue] = useState<string>(role.role);\r\n\r\n const updateThisUser = async () : Promise<void> =>{\r\n await updateTitlesData({role : selectValue}, role.id,'/api/v1/user',token);\r\n  handleClose();\r\n  reload();\r\n }\r\n\r\n const deleteUser = () : void =>{\r\n  if (window.confirm(\"Do you really want to delete this user?\")) {\r\n    deleteTitlesData(role.id,'/api/v1/user',token);\r\n    handleClose();\r\n    reload();\r\n  };\r\n\r\n };\r\n \r\n  return (\r\n    <div>\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <BootstrapDialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Edit User\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n         <div >\r\n         <div className={styles.role}><span>Role:</span>\r\n         <select value={selectValue} onChange={(e)=>setSelectValue(e.target.value)}>\r\n          <option selected={role.role === 'user' ? true : false} value='user'>user</option>\r\n          <option selected={role.role === 'admin' ? true : false} value='admin'>admin</option>\r\n          <option selected={role.role === 'SuperAdmin' ? true : false} value='SuperAdmin'>SuperAdmin</option>\r\n          </select>\r\n          </div>\r\n          <div><button onClick={deleteUser} className={styles.delete}>Delete</button>(User will be deleted)</div>   \r\n         </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={updateThisUser} >\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </div>\r\n  );\r\n};\r\nexport default UsersEditModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"popUp_img__FcG+r\"};","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport styles from './popUp.module.scss'\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface Props {\r\nopen : boolean ;\r\nhandleClose() :void ;\r\n}\r\nconst PopUp : React.FC<Props> = ({open,handleClose})=> {\r\n \r\n\r\n  return (\r\n    <div className={styles.PopUp}>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n           Only SuperAdmin Can Edit This !      \r\n          </Typography>\r\n          <img className={styles.img} src={require('../../../components/StaticPictures/mokey.webp')} alt='monkey' />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default PopUp;","import { useState, useEffect } from 'react';\r\nimport styles from './usersAdmin.module.scss';\r\nimport { useContext } from 'react';\r\nimport { TaskContext } from '../../components/Context/TaskContext';\r\nimport UsersEditModal from './UsersEditModal/UsersEditModal';\r\nimport PopUp from './PopUp/PopUp';\r\n\r\nconst UsersAdmin : React.FC  = () => {\r\n  async function getData(url :string, token :string) : Promise<any> {\r\n    let metod = {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: 'Bearer' + ' ' + token\r\n      }\r\n    };\r\n    try {\r\n      const response = await fetch(url, metod) ;\r\n      let apiData = await response.json();\r\n      return apiData;\r\n    } catch (err) {\r\n      console.log('Errror with dataBases');\r\n    }\r\n  }\r\n  interface Users {\r\n    id : string ;\r\n    email :string ;\r\n    role :string ;\r\n    nick : string ;\r\n  }\r\n\r\n  const [users, setUsers] = useState<Users[]>([]);\r\n  const [open,setOpen] = useState<boolean>(false)\r\n  const { token } : any = useContext(TaskContext);\r\n  const {isAdmin} : any = useContext(TaskContext);\r\n  const [role,setRole] = useState<string>('')\r\n  const handleClose =() : void =>{\r\n    setOpen(false)\r\n  }\r\n\r\n const openThis = async (e:any) =>{\r\n  setRole(e)\r\n  setOpen(true)\r\n }\r\n\r\n  async function reload() : Promise<void> {\r\n    getData('/api/v1/user', token).then(data => setUsers(data));\r\n  }\r\n\r\n  useEffect(() => {\r\n    reload();\r\n  }, []);\r\n\r\n  \r\n    return (\r\n      <div className={styles.EditUsersWrapper}>\r\n        <h1>Edit Users </h1>\r\n        {users && users?.map((el : Users) => {\r\n          return (\r\n            <div key={el.id} className={styles.tableUsers} onClick={()=>{openThis(el)}}>\r\n              <div>\r\n                <p>E-mail : {el.email}</p>\r\n                <p>Staus : {el.role}</p>\r\n                <p>Nick Name: {el.nick}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n     {isAdmin=== 'SuperAdmin' ? <UsersEditModal open={open} handleClose={handleClose} role={role} reload={reload}/> :  <PopUp open={open} handleClose={handleClose}  />}\r\n      </div>\r\n    );\r\n  \r\n};\r\n\r\nexport default UsersAdmin;\r\n"],"names":["BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","sx","m","p","IconButton","onClick","position","right","top","color","palette","grey","Close","open","handleClose","role","reload","token","useContext","TaskContext","useState","selectValue","setSelectValue","updateThisUser","updateTitlesData","id","DialogContent","dividers","className","styles","value","onChange","e","target","selected","window","confirm","deleteTitlesData","DialogActions","Button","autoFocus","style","left","transform","width","bgcolor","border","boxShadow","Modal","Box","Typography","variant","component","src","require","alt","getData","url","metod","method","headers","authorization","fetch","response","json","apiData","console","log","users","setUsers","setOpen","isAdmin","setRole","openThis","then","data","useEffect","map","el","email","nick"],"sourceRoot":""}